<?php
class gcoder {
	var $safeZ=0.0;
	var $feedRate=40; //Inches per minute
	var $safetyOverride=1;
	var $extrudeTemp=220;
	var $platformTemp=110;
	var $extrudeSpeed=240;
	var $extruderOn=false;
	
	var $buffer;

	function __construct($extrude=220,$platform=110,$speed=240) {
		$this->extrudeTemp = $extrude;
		$this->platformTemp = $platform;
		$this->extrudeSpeed = $speed;;
	}

	function header( $buffered = true ) {
		$currentTime=date("r");
		$dateString=$currentTime;
		$out = "";	
		$out.="(Generated by phpGcoder v1.0 ".$dateString." danmorgan.net)\n";
		$out .= "M104 S".$this->extrudeTemp." T0\n"; //Extruder Temprature in Celcius
		$out .= "M109 S".$this->platformTemp." T0\n"; //Platform Temprature in Celcius
		$out .= "G21\n"; //MM as units
		$out .= "G90\n"; //Absolute Positioning
		$out .= "G92 X0 Y0 Z0\n"; // Reset Position
		$out .= "M108 S".$this->extrudeSpeed."\n";
		$out .= "M6 T0\n"; //Wait to heat up.

		if ($buffered === TRUE) $this->buffer .= $out;

		return $out;		
	}

	function footer( $buffered = TRUE ) {
		$out="M02\n";
		if ($buffered == TRUE) $this->buffer .= $out;
		return $out;
	}

	function extruderOn() {
		if ($this->extruderOn == FALSE) $this->buffer .= "M101\n";
		$this->extruderOn = true;
	}

	function extruderOff() {
		if ($this->extruderOn == TRUE) $this->buffer .= "M103\n";
		$this->extruderOn = false;
	}

	function pause() {
		$out = "(Pause Program until Cycle Start button)\n";
		$out.="M71\n";
		$this->buffer .= $out;
	}

	function go($x,$y,$z,$speed=3300) {
			$this->buffer .= "G1 X{$x} Y{$y} Z{$z} F".$speed."\n";
	}
	
	function d($number) {
		return sprintf("%0.6f",$number);
	}
		
	function cart2Polar($x,$y) {
		$r=sqrt( ($x*$x)+($y*$y) ); //(x**2)+(y**2) );
		$t=atan($y/$x);
		$deg=(180*$t)/pi(); //$PI;
		$obj=new Object;
		$obj->r=$r;
		$obj->t=$t;
		$obj->deg=$deg;
		return $obj;
	}

	function drawLine($x1,$y1,$z1,$x2,$y2,$z2,$speed=3300) {
		$this->extruderOff();
		$this->go($x1,$y1,$z1);
		$this->extruderOn();
		$this->go($x2,$y2,$z2,$speed);
		$this->extruderOff();
	}
	
	function polar2Cart($radius,$degree) {
		$radians=(pi() * $degree) / 180.00;
		$y=$radius * cos( $radians );
		$x=$radius * sin( $radians );
		$x=round($x,6); //roundNumber($x,6);
		$y=round($y,6); //roundNumber($y,6);
		$obj=new stdClass();
		$obj->x=$x;
		$obj->y=$y;
		return $obj;
	}

	function roundNumber($num, $dec) {
		$result = round(pow(10,$dec))/pow(10,$dec);
		return $result;
	}

	function calculateArc($x,$y,$z,$radius,$start,$stop) {
		$out = "";
		$p1=$this->polar2Cart($radius,$start);
		$p2=$this->polar2Cart($radius,$stop);

		$obj=new stdClass();
		$obj->p1x=$p1->x+$x;
		$obj->p1y=$p1->y+$y;
		$obj->p2x=$p2->x+$x;
		$obj->p2y=$p2->y+$y;
		return $obj;	
	}

	function __toString() {

		$out = $this->header( false );
		$out .= $this->buffer;
		$out .= $this->footer( false );

		return $out;
	}
}
?>
